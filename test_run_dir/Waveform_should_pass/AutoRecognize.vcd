$date
2024-06-04T03:13+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module AutoRecognize $end
 $var wire 1 ! FLAG $end
 $var wire 8 " FB_3 $end
 $var wire 32 # CMD_Shift $end
 $var wire 8 $ FB_0 $end
 $var wire 1 % io_Feedback_ready $end
 $var wire 1 & io_CMD_valid $end
 $var wire 1 ' valid $end
 $var wire 8 ( FB_2 $end
 $var wire 2 ) CNT $end
 $var wire 8 * io_Feedback_bits $end
 $var wire 1 + clock $end
 $var wire 28 , COM $end
 $var wire 8 - out $end
 $var wire 1 . io_CMD_ready $end
 $var wire 8 / FB_1 $end
 $var wire 1 0 reset $end
 $var wire 1 1 io_Feedback_valid $end
 $var wire 8 2 io_CMD_bits $end
$upscope $end
$enddefinitions $end
$dumpvars
0%
b00000000 (
b00000000 /
0&
b0000000000000000000000000000 ,
0'
0.
b00000000 "
b00 )
b00000000 2
b00000000 *
0!
00
b00000000 $
b00000000000000000000000000000000 #
01
b00000000 -
0+
$end
#0
10
1.
b1000001001011001000011101011 ,
#1
b11101011 "
b00100101 $
1+
b10010000 (
b00001000 /
b11 )
#6
00
0+
#11
b11101011 -
b11101011 *
1+
#16
0+
#21
1+
#26
1&
b11101011 2
0+
#31
b11101011000000000000000000000000 #
1+
#36
0&
0+
#41
1+
#46
0+
#51
1+
#56
1&
b10010000 2
0+
#61
b10010000111010110000000000000000 #
1+
#66
0&
0+
#71
1+
#76
0+
#81
1+
#86
1&
b00100101 2
0+
#91
b00100101100100001110101100000000 #
1+
#96
0&
0+
#101
1+
#106
0+
#111
1+
#116
1&
b00001000 2
0+
#121
b00001000001001011001000011101011 #
1+
#126
1%
0&
0+
#131
1!
b00000000000000000000000000000000 #
1+
#136
0%
0+
#141
1+
#146
0+
#151
1+
#156
0+
#161
1+
#166
0+
#171
1+
#176
0+
#181
1+
#186
1%
0+
#191
11
1'
1+
b10 )
#196
0+
#201
b10010000 -
b10010000 *
1+
b01 )
#206
0+
#211
b00001000 -
b00001000 *
1+
b00 )
#216
0+
#221
0!
b00100101 -
b00100101 *
1+
b11 )
#226
0+
#231
b11101011 -
01
b11101011 *
0'
1+
#236
0+
#241
1+
#246
0+
#251
1+
#256
0+
#261
1+
#266
0+
#271
1+
#276
0+
#281
1+
#286
0%
b00000000 2
0+
